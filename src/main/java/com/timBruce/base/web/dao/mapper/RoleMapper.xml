<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.timBruce.base.web.dao.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.timBruce.base.web.model.Role" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="role_sign" property="roleSign" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="BIT" />
  </resultMap>

  <resultMap id="BaseResultMap_CacheCade" type="com.timBruce.base.web.model.User">
    <id column="id" property="id" jdbcType="BIGINT"/>
    <result column="role_name" property="roleName" jdbcType="VARCHAR"/>
    <result column="role_sign" property="roleSign" jdbcType="VARCHAR"/>
    <result column="description" property="description" jdbcType="VARCHAR"/>
    <result column="available" property="available" jdbcType="BIT"/>
    <collection property="permissions" ofType="Permission">
      <id column="pid" property="id" jdbcType="BIGINT"/>
      <result column="permission_name" property="permissionName" jdbcType="VARCHAR"/>
      <result column="permission_sign" property="permissionSign" jdbcType="VARCHAR"/>
      <result column="pdescription" property="description" jdbcType="VARCHAR"/>
      <result column="pavailable" property="available" jdbcType="BIT"/>
    </collection>
  </resultMap>
  <sql id="Base_Column_List" >
    id, role_name, role_sign, description, available
  </sql>

  <sql id="Base_Column_List_CacheCade">
    r.id, r.role_name, r.role_sign, r.description, r.available,
    p.id as pid, p.permission_name, p.permission_sign, p.description as pdescription, p.available as pavailable
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.timBruce.base.web.model.Role" >
    insert into t_role (id, role_name, role_sign, 
      description, available)
    values (#{id,jdbcType=BIGINT}, #{roleName,jdbcType=VARCHAR}, #{roleSign,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="com.timBruce.base.web.model.Role" >
    insert into t_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="roleSign != null" >
        role_sign,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="available != null" >
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleSign != null" >
        #{roleSign,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        #{available,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.timBruce.base.web.model.Role" >
    update t_role
    <set >
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleSign != null" >
        role_sign = #{roleSign,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="available != null" >
        available = #{available,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.timBruce.base.web.model.Role" >
    update t_role
    set role_name = #{roleName,jdbcType=VARCHAR},
      role_sign = #{roleSign,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>